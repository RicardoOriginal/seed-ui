/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/javafx/FXML2.java to edit this template
 */
package seed.ui.controller;

import java.awt.Graphics2D;
import java.awt.image.BufferedImage;
import java.io.ByteArrayInputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;
import java.net.URL;
import java.util.ResourceBundle;
import java.util.logging.Level;
import java.util.logging.Logger;
import javafx.embed.swing.SwingFXUtils;
import javafx.event.ActionEvent;
import javafx.fxml.FXML;
import javafx.fxml.Initializable;
import javafx.scene.control.Button;
import javafx.scene.control.Label;
import javafx.scene.control.TextField;
import javafx.scene.image.Image;
import javafx.scene.image.ImageView;
import javafx.scene.layout.GridPane;
import javafx.stage.Stage;
import javax.imageio.ImageIO;
import seed.ui.service.PrintService;
import sun.misc.BASE64Decoder;

/**
 *
 * @author ricar
 */
public class TagController implements Initializable {

    @FXML
    private Button btn_imprimir;

    @FXML
    private Label id_hibrido;

    @FXML
    private Label lb_anel;

    @FXML
    private Label lb_etiqueta;

    @FXML
    private Label lb_gaucho;

    @FXML
    private Label lb_labfix;

    @FXML
    private Label lb_labsec;

    @FXML
    private Label lb_lote;

    @FXML
    private Label lb_nome;

    @FXML
    private Label lb_origem;

    @FXML
    private Label lb_peneira;

    @FXML
    private Label lb_peso_bag;

    @FXML
    private Label lb_prime;

    @FXML
    private Label lb_qrcode;

    @FXML
    private Label lb_quantidade_sacos;

    @FXML
    private Label lb_renasem;

    @FXML
    private Label lb_safra;

    @FXML
    private Label lb_sugestao_disco;

    @FXML
    private Label lb_tratamento;

    @FXML
    private Label lb_validade_teste_germinacao;

    @FXML
    private TextField txt_anel;

    @FXML
    private TextField txt_etiqueta;

    @FXML
    private TextField txt_gaucho;

    @FXML
    private TextField txt_hibrido;

    @FXML
    private TextField txt_labfix;

    @FXML
    private TextField txt_labsec;

    @FXML
    private TextField txt_lote;

    @FXML
    private TextField txt_nome;

    @FXML
    private TextField txt_origem;

    @FXML
    private TextField txt_peneira;

    @FXML
    private TextField txt_peso_bag;

    @FXML
    private TextField txt_prime;

    @FXML
    private TextField txt_qrcode;

    @FXML
    private TextField txt_quantidade_saco;

    @FXML
    private TextField txt_renasem;

    @FXML
    private TextField txt_safra;

    @FXML
    private TextField txt_sugestao_disco;

    @FXML
    private TextField txt_tratamento;

    @FXML
    private TextField txt_validade_teste_germinacao;
   
    @FXML
    private GridPane gp_seed;
    
    @FXML
    private ImageView iv_tg;
    
    @FXML
    private Button btn_salvar;
    
    private Image imageTag;
    
    @Override
    public void initialize(URL url, ResourceBundle rb) {
        // TODO
    }
    
    @FXML
    public void saveShow(ActionEvent event) {
        System.out.println("saveShow...!");
        String tagBase64 = createTag();
        imageTag = base64ToImage(tagBase64);
        showTag(imageTag);
    }
    
    @FXML
    public void print(ActionEvent event) {
        System.out.println("print...!");
        Stage stage = (Stage) gp_seed.getScene().getWindow();
        printImage(stage, imageTag);
    }
    
    private String createTag(){
        System.out.println("createTag...!");
        String base64Image = "";
        return base64Image;
    }
    
    private Image base64ToImage(String bas64){
        System.out.println("base64ToImage...!");
        BufferedImage bfImage = decodeToImage(bas64);
        return SwingFXUtils.toFXImage(bfImage, null );
    }
    
    private void showTag(Image image){
        System.out.println("showTag...!");
        iv_tg.setImage(image);
    }
    
    private void printImage(Stage stage, Image imageTag){
        System.out.println("printImage...!");
        try {
            BufferedImage bfImage = SwingFXUtils.fromFXImage(imageTag, null);
            
            BufferedImage imageRGB = new BufferedImage(
                    bfImage.getWidth(),
                    bfImage.getHeight(),
                    BufferedImage.OPAQUE);
            
            Graphics2D graphics = imageRGB.createGraphics();
            
            graphics.drawImage(bfImage, 0, 0, null);
            
            String typeArquive = ".jpg";
            long tagName = System.currentTimeMillis();
            String urlImage = "C:/Users/ricar/OneDrive/Documentos/NetBeansProjects/etiquetas/"+tagName+typeArquive;
            
            ImageIO.write(imageRGB, "jpg", new File(urlImage));
            
            graphics.dispose();
            
            Image image = new Image(new FileInputStream(urlImage));
            ImageView imageView = new ImageView(image);
            PrintService choosePrint = new PrintService(); 
            choosePrint.printSetup(imageView, stage);
        } catch (IOException ex) {
            Logger.getLogger(TagController.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    public static BufferedImage decodeToImage(String imageString) {
        System.out.println("decodeToImage...!");
        BufferedImage image = null;
        byte[] imageByte;
        try {
            BASE64Decoder decoder = new BASE64Decoder();
            imageByte = decoder.decodeBuffer(imageString);
            ByteArrayInputStream bis = new ByteArrayInputStream(imageByte);
            image = ImageIO.read(bis);
            bis.close();
        } catch (Exception e) {
            e.printStackTrace();
        }
        return image;
    }
    
//    private void printImage(){
//        DocFlavor flavor = DocFlavor.INPUT_STREAM.JPEG;
//        PrintRequestAttributeSet aset = new HashPrintRequestAttributeSet();
//
//        PrintService printService = PrintServiceLookup.lookupDefaultPrintService();
//        Media[] res = (Media[]) printService.getSupportedAttributeValues(Media.class, null, null);
//
//        aset.add(OrientationRequested.PORTRAIT);
//        aset.add(res[9]);
//
//        DocPrintJob pj = printService.createPrintJob();
//
//        FileInputStream fis;
//        try {
//            fis = new FileInputStream("C:/Users/ricar/OneDrive/Documentos/NetBeansProjects/seed-ui/src/seed/ui/1.jpg");
//            Doc doc = new SimpleDoc(fis, flavor, null);
//            pj.print(doc, aset);
//        } catch (FileNotFoundException | PrintException ex) {
//            Logger.getLogger(FXMLDocumentController.class.getName()).log(Level.SEVERE, null, ex);
//        }
//    }
    
    
//    private void printImage() {
//        Image image = new Image("http://www.gnu.org/graphics/gnu-head.png");
//        BufferedImage bufferedImage = SwingFXUtils.fromFXImage(image, null);
//        PrinterJob printJob = PrinterJob.getPrinterJob();
//        printJob.setPrintable(new Printable() {
//        @Override
//        public int print(Graphics graphics, PageFormat pageFormat, int pageIndex) throws PrinterException {
//            // Get the upper left corner that it printable
//            int x = (int) Math.ceil(pageFormat.getImageableX());
//            int y = (int) Math.ceil(pageFormat.getImageableY());
//            if (pageIndex != 0) {
//              return NO_SUCH_PAGE;
//            }
//            graphics.drawImage(bufferedImage, x, y, bufferedImage.getWidth(), bufferedImage.getHeight(), null);
//            return PAGE_EXISTS;
//        }
//        });
//        try {
//            printJob.print();
//        } catch (PrinterException e1) {
//        }
//    }
    
//    public void printThis() {
//        try {
//            String path = "C:/Users/ricar/OneDrive/Documentos/NetBeansProjects/seed-ui/src/seed/ui/1.jpg";
//            Image image = new Image(new FileInputStream(path));
//            ImageView imageView = new ImageView(image);
//            new Thread(() -> printImage(imageView)).start();
//        } catch (FileNotFoundException ex) {
//            Logger.getLogger(FXMLDocumentController.class.getName()).log(Level.SEVERE, null, ex);
//        }
//        
//    }

//    public void printImage(ImageView image) {
//        Printer printer = Printer.getDefaultPrinter();
//        PrinterJob printJob = PrinterJob.createPrinterJob(printer);
//        PageLayout pageLayout = printJob.getJobSettings().getPageLayout();
//        //PageLayout pageLayout = printer.createPageLayout(Paper.A4, PageOrientation.PORTRAIT, Printer.MarginType.DEFAULT);
//        printJob.getJobSettings().setPageLayout(pageLayout);
//        if (printJob != null) {
//            boolean success = printJob.printPage(image);
//            if (success) {
//                printJob.endJob();
//            }
//        }
//    }
//    
//    private void buildNode(final Node node, final Stage stage){        
//        Printer printer = Printer.getDefaultPrinter();
//        PageLayout pageLayout = printer.createPageLayout(Paper.JAPANESE_POSTCARD, PageOrientation.LANDSCAPE, Printer.MarginType.EQUAL);
//        double scaleX = pageLayout.getPrintableWidth() / node.getBoundsInParent().getWidth();
//        double scaleY = pageLayout.getPrintableHeight() / node.getBoundsInParent().getHeight();
//        node.getTransforms().add(new Scale(scaleX, scaleY));
//        PrintService choosePrint = new PrintService();         
//        choosePrint.printSetup(node, stage);
//    }
    
//    public void print(final Node node) {
//        Printer printer = Printer.getDefaultPrinter();
//        PageLayout pageLayout = printer.createPageLayout(Paper.NA_LETTER, PageOrientation.PORTRAIT, Printer.MarginType.DEFAULT);
//        double scaleX = pageLayout.getPrintableWidth() / node.getBoundsInParent().getWidth();
//        double scaleY = pageLayout.getPrintableHeight() / node.getBoundsInParent().getHeight();
//        node.getTransforms().add(new Scale(scaleX, scaleY));
//
//        PrinterJob job = PrinterJob.createPrinterJob();
//        if (job != null) {
//            boolean success = job.printPage(node);
//            if (success) {
//                job.endJob();
//            }
//        }
//    }
//    
//    @Override
//    public void initialize(URL url, ResourceBundle rb) {
//        // TODO
//    }
    

//    private void createPdf(){
//
//        // criação do objeto documento
//        Rectangle pagesize = new Rectangle(612, 864);
//        Document document = new Document(pagesize);
//
//        try {
//
//            PdfWriter.getInstance(document, new FileOutputStream("C:/Users/ricar/OneDrive/Documentos/NetBeansProjects/teste.pdf"));
//            document.open();
//
//            // adicionando um parágrafo ao documento
//            document.add(new Paragraph("Gerando um PDF usando iText em Java"));
//
//            // adicionando um parágrafo com fonte diferente ao arquivo
//            document.add(new Paragraph("Adicionando outro paragrafo", FontFactory.getFont(FontFactory.COURIER, 12)));
//        } catch(DocumentException | IOException de) {
//            System.err.println(de.getMessage());
//        } finally {
//            document.close();
//        }
//    }
    
//    private void createImage(){
//        Document document = new Document();
//        try {
//            PdfWriter.getInstance(document, new FileOutputStream("C:/Users/ricar/OneDrive/Documentos/NetBeansProjects/teste.pdf"));
//            Image img = Image.getInstance("C:/Users/ricar/OneDrive/Imagens/seed/teste.jpg");
//            document.open();
//            img.scaleToFit(200, 200);
//            document.add(new Paragraph("Sample 1: This is simple image demo."));
//            document.add(img);
//            document.close();
//        } catch (FileNotFoundException ex) {
//            Logger.getLogger(FXMLDocumentController.class.getName()).log(Level.SEVERE, null, ex);
//        } catch (DocumentException | IOException ex) {
//            Logger.getLogger(FXMLDocumentController.class.getName()).log(Level.SEVERE, null, ex);
//        }
//    }
    
//    private Map<String, Object> mappingDataPdf() {
//
//        Map<String, Object> data = new HashMap<>();
//        data.put("operationName", "operationName");
//        data.put("companyName", "companyName");
//        data.put("titleReport", "Relatório de Contratos Planos Clin Odonto");
//        data.put("exportationDate", "exportationDate");
//        data.put("list", "list");
//        return data;
//    }    
}
